<?xml version="1.0"?>
<?xml-stylesheet href="modification.xsl" type="text/xsl"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	ATTENTION: If you are trying to install this manually, you should try
	the package manager.  If it will not work for you, please take a look
	at the following for information on this format:
		http://mods.simplemachines.org/docs/manual-install.php

================================================================================

	Modification files can be used to modify files so that they do what
	your package needs them to do to work properly.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">
	<!-- This information needs to be the same as that in the package-info.xml. -->
	<id>Niko:SMFProject</id>
	<version>0.504</version>

	<!-- Board directory -->
	<file name="$boarddir/index.php">
		<operation>
			<search position="after"><![CDATA[	// Load the current user's permissions.]]></search>
			<add><![CDATA[
	// Project Tools (edit 1)
	global $project, $issue;
	if (!empty($modSettings['projectEnabled']))
	{
		require_once($sourcedir . '/Subs-Project.php');
		require_once($sourcedir . '/Subs-Issue.php');

		loadProjectTools();

		// Load Project (if needed)
		loadProject();
	}
	else
	{
		$user_info['query_see_project'] = '0=1';
	}
]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[	// If we are in a topic and don't have permission to approve it then duck out now.]]></search>
			<add><![CDATA[
	// Project Tools (edit 2)
	if (!empty($modSettings['projectEnabled']))
	{
		// Load Issue (if needed)
		loadIssue();

		if (empty($_REQUEST['action']) && (!empty($project) || !empty($issue)))
		{
			$_REQUEST['action'] = 'projects';
			$_GET['action'] = 'projects';
		}
	}]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[		'im' => array('PersonalMessage.php', 'MessageMain'),]]></search>
			<add><![CDATA[
		'projects' => array('Project.php', 'Projects'),]]></add>
		</operation>
	</file>

	<file name="$boarddir/SSI.php">
		<operation>
			<search position="after"><![CDATA[// Take care of any banning that needs to be done.]]></search>
			<add><![CDATA[// Project Tools
if (!empty($modSettings['projectEnabled']) || (isset($project_tools) && $project_tools === true))
{
	require_once($sourcedir . '/Subs-Project.php');
	require_once($sourcedir . '/Subs-Issue.php');

	loadProjectTools();
	
	if (empty($project_tools))
		loadProjectToolsPage('smf');
	// Load Project (if needed)
	else
		loadProject();
}
else
{
	$user_info['query_see_project'] = '0=1';
}
]]></add>
		</operation>
	</file>

	<!-- Source files -->
	<file name="$sourcedir/Admin.php">
		<operation>
			<search position="after"><![CDATA[		'layout' => array(
			'title' => $txt['layout_controls'],]]></search>
			<add><![CDATA[		'project' => array(
			'title' => $txt['project_tools'],
			'permission' => array('project_admin'),
			'areas' => array(
				'projectsadmin' => array(
					'label' => $txt['project_general'],
					'file' => 'ProjectAdmin.php',
					'function' => 'ProjectsAdmin',
					'enabled' => !empty($modSettings['projectEnabled']),
					'permission' => array('project_admin'),
					'subsections' => array(
						'main' => array($txt['project_general_main']),
						'settings' => array($txt['project_general_settings']),
						'maintenance' => array($txt['project_general_maintenance']),
						'extensions' => array($txt['project_general_extensions'])
					),
				),
				'manageprojects' => array(
					'label' => $txt['manage_projects'],
					'file' => 'ManageProjects.php',
					'function' => 'ManageProjects',
					'enabled' => !empty($modSettings['projectEnabled']),
					'permission' => array('project_admin'),
					'subsections' => array(
						'list' => array($txt['modify_projects']),
						'new' => array($txt['new_project']),
					),
				),
				'projectpermissions' => array(
					'label' => $txt['manage_project_permissions'],
					'file' => 'ProjectPermissions.php',
					'function' => 'ManageProjectPermissions',
					'enabled' => !empty($modSettings['projectEnabled']),
					'permission' => array('project_admin'),
					'subsections' => array(),
				),
			),
		),]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[	$language_files = array(]]></search>
			<add><![CDATA[
	'ProjectAdmin', ]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[	$include_files = array(]]></search>
			<add><![CDATA[
	'ProjectAdmin', ]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[		array('ModifyCacheSettings', 'area=serversettings;sa=cache'),]]></search>
			<add><![CDATA[
		array('ProjectsAdminSettings', 'area=projectsettings;sa=settings'),]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Display.php">
		<operation>
			<search position="after"><![CDATA[
	// This is just a regular attachment...
	else]]></search>
			<add><![CDATA[
	elseif (!empty($GLOBALS['issue']))
	{
		global $project, $issue;

		require_once($sourcedir . '/Project.php');

		loadProjectToolsPage('smf');

		// Make sure this attachment is on this issue.
		$request = $smcFunc['db_query']('', '
			SELECT a.id_folder, a.filename, a.file_hash, a.fileext, a.id_attach, a.attachment_type, a.mime_type, a.approved, i.id_reporter
			FROM {db_prefix}attachments AS a
				INNER JOIN {db_prefix}issues AS i ON (i.id_issue = a.id_issue)
			WHERE a.id_attach = {int:attach}
				AND i.id_issue = {int:issue}
			LIMIT 1',
			array(
				'issue' => $issue,
				'attach' => $_REQUEST['attach'],
			)
		);
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	if ($attachment_type != 3)]]></search>
			<add><![CDATA[	if ($attachment_type != 3 && (($file_ext != 'patch' && $file_ext != 'diff') || isset($_REQUEST['dl'])))]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[	// This is done to clear any output that was made before now. (would use ob_clean(), but that's PHP 4.2.0+...)]]></search>
			<add><![CDATA[	if (!isset($_REQUEST['dl']) && ($file_ext == 'patch' || $file_ext == 'diff'))
	{
		loadTemplate('PatchView', array('project'));
		$context['diff'] = DiffParser(file_get_contents($filename));
		$context['download'] = $scripturl;

		$context['page_title'] = sprintf($txt['patch_highlight'], $real_filename);

		return;
	}

]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Load.php">
		<!-- Project Theme -->
		<operation>
			<search position="after"><![CDATA[	// The theme is the forum's default.]]></search>
			<add><![CDATA[	elseif (!empty($context['project']['theme']))
		$id_theme = $context['project']['theme'];
]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[	// If they have specified a particular theme to use with SSI allow it to be used.]]></search>
			<add><![CDATA[	elseif (!empty($context['project']['theme']) && !empty($context['project']['override_theme']))
		$id_theme = $context['project']['theme'];
	elseif (isset($_REQUEST['action']) && $_REQUEST['action'] == 'projects' && !empty($modSettings['project_force_theme']))
		$id_theme = (int) $modSettings['project_force_theme'];
]]></add>
		</operation>
		
		<!-- Load Permissions -->
		<operation>
			<search position="after"><![CDATA[	// Banned?  Watch, don't touch..]]></search>
			<add><![CDATA[
	// Project Tools
	global $project, $context;
	
	if (!empty($modSettings['projectEnabled']) && !empty($project) && empty($context['project']['is_developer']))
	{
		if (!empty($modSettings['cache_enable']) && ($temp = cache_get_data('project_permissions:' . $cache_groups . ':' . $project, 240)) != null && time() - 240 > $modSettings['settings_updated'])
			list ($user_info['project_permissions']) = $temp;
		else
		{
			$user_info['project_permissions'] = array();
		
			$request = $smcFunc['db_query']('', '
				SELECT permission
				FROM {db_prefix}project_permissions
				WHERE id_group IN({array_int:groups})
					AND id_profile = {int:profile}',
				array(
					'profile' => $context['project']['profile'],
					'groups' => $user_info['groups'],
				)
			);
	
			while ($row = $smcFunc['db_fetch_assoc']($request))
				$user_info['project_permissions'][$row['permission']] = true;	
			$smcFunc['db_free_result']($request);
		}

		// User can see private issues
		if (!empty($user_info['project_permissions']['issue_view_private']))
			$user_info['query_see_issue_project'] = $user_info['query_see_version_issue'];
		
		if (!empty($modSettings['cache_enable']))
			cache_put_data('project_permissions:' . $cache_groups . ':' . $project, array($user_info['project_permissions'], null), 240);			
	}

]]></add>
		</operation>
	</file>

	<file name="$sourcedir/ManagePermissions.php">
		<operation>
			<search position="before"><![CDATA[			'profile_remote_avatar' => array(false, 'profile', 'use_avatar'),]]></search>

			<add><![CDATA[
			'project_access' => array(false, 'project', 'project'),
			'project_profile' => array(true, 'project', 'project'),
			'project_admin' => array(false, 'project', 'administrate'),]]></add>
		</operation>
	</file>

	<file name="$sourcedir/ManageSettings.php">
		<operation>
			<search position="after"><![CDATA[
		// pm = post moderation.]]></search>
			<add><![CDATA[		// pj = project tools
		'pj' => array(
			'url' => 'action=admin;area=projectsadmin',
			'settings' => array(
				'projectEnabled' => 1,
			),
		),]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Profile.php">
		<operation>
			<search position="after"><![CDATA[				'permissions' => array(]]></search>
			<add><![CDATA[				'project' => array(
					'label' => $txt['project_profile'],
					'file' => 'Profile-Project.php',
					'function' => 'projectProfile',
					'enabled' => !empty($modSettings['projectEnabled']),
					'subsections' => array(
						'main' => array($txt['project_profile_main']),
						'reported' => array($txt['project_profile_reported']),
						'assigned' => array($txt['project_profile_assigned']),
					),
					'permission' => array(
						'own' => 'project_profile_own',
						'any' => 'project_profile_any',
					),
				),
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Profile-Modify.php">
		<operation>
			<search position="replace"><![CDATA[function makeNotificationChanges($memID)
{
	global $smcFunc;]]></search>
			<add><![CDATA[function makeNotificationChanges($memID)
{
	global $modSettings, $smcFunc;]]></add>
			
		</operation>
		
		<operation>
			<search position="after"><![CDATA[}

// Save any changes to the custom profile fields...]]></search>
			<add><![CDATA[
	// Project Notifications
	elseif (!empty($modSettings['projectEnabled']) && isset($_POST['edit_notify_projects']) && !empty($_POST['notify_projects']))
	{
		// Make sure only integers are deleted.
		foreach ($_POST['notify_projects'] as $index => $id)
			$_POST['notify_projects'][$index] = (int) $id;

		// id_project = 0 is reserved for topic notifications.
		$_POST['notify_projects'] = array_diff($_POST['notify_projects'], array(0));

		$smcFunc['db_query']('', '
			DELETE FROM {db_prefix}log_notify_projects
			WHERE id_project IN ({array_int:project_list})
				AND id_member = {int:selected_member}',
			array(
				'project_list' => $_POST['notify_projects'],
				'selected_member' => $memID,
			)
		);
	}
]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[	// What options are set?]]></search>
			<add><![CDATA[
	if (!empty($modSettings['projectEnabled']))
	{
		// Now do the project notifications.
		$listOptions = array(
			'id' => 'project_notification_list',
			'title' => '&nbsp;<img src="' . $settings['images_url'] . '/icons/notify_sm.gif" alt="" align="top" />&nbsp;' . $txt['notifications_projects'],
			'width' => '100%',
			'no_items_label' => $txt['notifications_projects_none'],
			'no_items_align' => 'left',
			'base_href' => $scripturl . '?action=profile;area=notification;u=' . $memID,
			'default_sort_col' => 'project_name',
			'get_items' => array(
				'function' => 'list_getProjectNotifications',
				'params' => array(
					$memID,
				),
			),
			'columns' => array(
				'project_name' => array(
					'header' => array(
						'value' => $txt['project'],
						'style' => 'text-align: left',
					),
					'data' => array(
						'function' => create_function('$project', '
							global $settings, $txt;

							$link = $project[\'link\'];

							if ($project[\'new\'])
								$link .= \' <a href="\' . $project[\'href\'] . \'"><img src="\' . $settings[\'lang_images_url\'] . \'/new.gif" alt="\' . $txt[\'new\'] . \'" /></a>\';

							return $link;
						'),
					),
					'sort' => array(
						'default' => 'p.name',
						'reverse' => 'p.name DESC',
					),
				),
				'delete' => array(
					'header' => array(
						'value' => '<input type="checkbox" class="check" onclick="invertAll(this, this.form);" />',
						'style' => 'width: 4%;',
					),
					'data' => array(
						'sprintf' => array(
							'format' => '<input type="checkbox" name="notify_projects[]" value="%1$d" class="check" />',
							'params' => array(
								'id' => false,
							),
						),
						'style' => 'text-align: center;',
					),
				),
			),
			'form' => array(
				'href' => $scripturl . '?action=profile;save',
				'include_sort' => true,
				'include_start' => true,
				'hidden_fields' => array(
					'u' => $memID,
					'area' => $context['menu_item_selected'],
					$context['session_var'] => $context['session_id'],
				),
			),
			'additional_rows' => array(
				array(
					'position' => 'bottom_of_list',
					'value' => '<input class="button_submit" type="submit" name="edit_notify_projects" value="' . $txt['notifications_update'] . '" />',
					'class' => 'windowbg',
					'align' => 'right',
				),
			),
		);

		// Create the notification list.
		createList($listOptions);
	}
]]></add>
		</operation>

		<operation>
			<search position="end" />
			<add><![CDATA[
function list_getProjectNotifications($start, $items_per_page, $sort, $memID)
{
	global $smcFunc, $txt, $scripturl, $user_info;

	$request = $smcFunc['db_query']('', '
		SELECT
			p.id_project, p.name, p.id_event_mod, ' . ($user_info['is_guest'] ? '0 AS new_from' : '(IFNULL(log.id_event, -1) + 1) AS new_from') . '
		FROM {db_prefix}log_notify_projects AS lnp
			INNER JOIN {db_prefix}projects AS p ON (p.id_project = lnp.id_project)' . ($user_info['is_guest'] ? '' : '
			LEFT JOIN {db_prefix}log_projects AS log ON (log.id_member = {int:current_member}
				AND log.id_project = p.id_project)') . '
			LEFT JOIN {db_prefix}project_developer AS dev ON (dev.id_project = p.id_project
				AND dev.id_member = {int:current_member})
		WHERE lnp.id_member = {int:selected_member}
			AND {query_see_project}
		ORDER BY ' . $sort,
		array(
			'current_member' => $user_info['id'],
			'selected_member' => $memID,
		)
	);

	$notification_projects = array();
	while ($row = $smcFunc['db_fetch_assoc']($request))
		$notification_projects[] = array(
			'id' => $row['id_project'],
			'name' => $row['name'],
			'href' => $scripturl . '?project=' . $row['id_project'],
			'link' => '<a href="' . $scripturl . '?project=' . $row['id_project'] . '">' . $row['name'] . '</a>',
			'new' => $row['new_from'] < $row['id_event_mod']
		);
	$smcFunc['db_free_result']($request);

	return $notification_projects;
}]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/Security.php">
		<operation>
			<search position="before"><![CDATA[$user_info['permissions'] = array_diff($user_info['permissions'], $denied_permissions);]]></search>
			<add><![CDATA[

		if (!empty($modSettings['projectEnabled']) && !empty($user_info['project_permissions']) && empty($modSettings['projectNoPostbanCheck']))
		{
			$pt_denied_permissions = array(
				'issue_report', 'issue_update', 'issue_attach', 'issue_moderate',
				'issue_comment', 'edit_comment', 'delete_comment'
			);
			$user_info['project_permissions'] = array_diff($user_info['project_permissions'], $pt_denied_permissions);
		}
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs.php">
		<operation>
			<search position="before"><![CDATA[$context['allow_admin'] = allowedTo(array(]]></search>
			<add><![CDATA['project_admin', ]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[	$context['allow_calendar'] = allowedTo('calendar_view') && !empty($modSettings['cal_enabled']);]]></search>
			<add><![CDATA[	$context['allow_project'] = !empty($modSettings['projectEnabled']) && allowedTo('project_access');]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[			'search' => array(]]></search>
			<add><![CDATA[			'projects' => array(
				'title' => $txt['projects'],
				'href' => $scripturl . '?action=projects',
				'show' => $context['allow_project'],
				'sub_buttons' => array(),
			),]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[|action=profile;u=\d+]]></search>
			<add><![CDATA[|(action=projects)?(sa=viewIssue;)?(;)?issue=(\d+)(\.com(\d+))?(#com(\d+))?]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[
			array(
				'tag' => 'pre',]]></search>
			<add><![CDATA[
			array(
				'tag' => 'patch',
				'type' => 'unparsed_content',
				'before' => '<div>',
				'content' => '$1',
				'after' => '</div>',
				'validate' => create_function('&$tag, &$data, $disabled', '
					$data = strtr($data, array(\'<br />\' => "\n"));
					$diff = DiffParser($data);

					if (empty($diff))
						return;

					$data = \'\';
					foreach ($diff as $file)
					{
						$data .= \'<div class="tborder">\';
						$data .= \'<h3 class="titlebg headerpadding">\' . $file[\'name_before\'] . \'</h3>\';

						$section = false;

						foreach ($file[\'actions\'] as $action)
						{
							$style = \'\';

							if (trim($action[1]) == \'\')
								$action[1] = \'&nbsp;\';

							if (empty($action[0]))
								$style = \'\';
							elseif ($action[0] == \'@\')
							{
								if ($section)
									$data .= \'</div>\';

								$data .= \'<h4 class="catbg headerpadding">\' . $action[1] . \'</h4><div class="windowbg2 smallpadding" style="font-family: monospace; white-space: pre;">\';

								$section = true;

								continue;
							}
							elseif ($action[0] == \'a\')
								$style .= \' background-color: #DDFFDD\';
							elseif ($action[0] == \'d\')
								$style .= \' background-color: #FFDDDD\';

							if (!$section)
								$data .= \'<div class="windowbg2 smallpadding" style="font-family: monospace">\';
							$section = true;

							$data .= \'<div style="\' . $style . \'">\' . $action[1] . \'</div>\';
						}

						$data .= \'</div></div><br />\';
					}'
				),
				'block_level' => true,
			),]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[			if (!empty($modSettings['autoLinkUrls']))]]></search>
			<add><![CDATA[
			if (!empty($modSettings['linkIssues']) && !empty($modSettings['issueRegex']) && !empty($modSettings['projectEnabled']))
			{
				$no_autolink_area = false;
				if (!empty($open_tags))
				{
					foreach ($open_tags as $open_tag)
						if (in_array($open_tag['tag'], $no_autolink_tags))
							$no_autolink_area = true;
				}

				$lastAutoPos = isset($lastAutoPos) ? $lastAutoPos : 0;
				if ($pos < $lastAutoPos)
					$no_autolink_area = true;
				$lastAutoPos = $pos;

				if (!$no_autolink_area)
					$data = project_link_issues($data);
			}
			]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs-BoardIndex.php">
		<operation>
			<search position="after"><![CDATA[	return $boardIndexOptions['include_categories'] ? $categories : $this_category;]]></search>
			<add><![CDATA[	if (!empty($modSettings['projectEnabled']))
	{
		loadProjectToolsPage('smf');

		// TODO: Limit to projects that will be seen

		$request = $smcFunc['db_query']('', '
			SELECT
				p.id_project, p.name, p.description, p.id_category, p.cat_position, p.trackers, p.' . implode(', p.', $context['tracker_columns']) . ', p.id_event_mod,
				mem.id_member, mem.real_name,
				' . ($user_info['is_guest'] ? '0 AS new_from' : '(IFNULL(log.id_event, -1) + 1) AS new_from') . '
			FROM {db_prefix}projects AS p' . ($user_info['is_guest'] ? '' : '
				LEFT JOIN {db_prefix}log_projects AS log ON (log.id_member = {int:member}
					AND log.id_project = p.id_project)') . '
				LEFT JOIN {db_prefix}project_developer AS pdev ON (pdev.id_project = p.id_project)
				LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = pdev.id_member)
				LEFT JOIN {db_prefix}project_developer AS dev ON (dev.id_project = p.id_project
					AND dev.id_member = {int:member})
			WHERE {query_see_project}
			ORDER BY p.name',
			array(
				'member' => $user_info['id'],
			)
		);

		$context['boardindex_projects'] = array();

		while ($row = $smcFunc['db_fetch_assoc']($request))
		{
			$key = $row['id_category'] . '_' . $row['cat_position'];

			if (isset($context['boardindex_projects'][$key][$row['id_project']]))
			{
				if (empty($row['id_member']))
					continue;

				$context['boardindex_projects'][$key][$row['id_project']]['developers'][] = '<a href="' . $scripturl . '?action=profile;u=' . $row['id_member'] . '">' . $row['real_name'] . '</a>';

				continue;
			}

			$context['boardindex_projects'][$key][$row['id_project']] = array(
				'id' => $row['id_project'],
				'link' => '<a href="' . project_get_url(array('project' => $row['id_project'])) . '">' . $row['name'] . '</a>',
				'href' => project_get_url(array('project' => $row['id_project'])),
				'name' => $row['name'],
				'description' => $row['description'],
				'new' => $row['new_from'] <= $row['id_event_mod'] && !$user_info['is_guest'],
				'trackers' => array(),
				'developers' => array(),
			);

			if (!empty($row['id_member']))
				$context['boardindex_projects'][$key][$row['id_project']]['developers'][] = '<a href="' . $scripturl . '?action=profile;u=' . $row['id_member'] . '">' . $row['real_name'] . '</a>';

			$trackers = explode(',', $row['trackers']);
			foreach ($trackers as $id)
			{
				$tracker = &$context['issue_trackers'][$id];
				$context['boardindex_projects'][$key][$row['id_project']]['trackers'][$id] = array(
					'id' => $id,
					'tracker' => $tracker,
					'open' => $row['open_' . $tracker['short']],
					'closed' => $row['closed_' . $tracker['short']],
					'total' => $row['open_' . $tracker['short']] + $row['closed_' . $tracker['short']],
					'progress' => round(($row['closed_' . $tracker['short']] / max(1, $row['open_' . $tracker['short']] + $row['closed_' . $tracker['short']])) * 100, 2),
					'link' => project_get_url(array('project' => $row['id_project'], 'sa' => 'issues', 'tracker' => $tracker['short'])),
				);
				unset($tracker);
			}
		}
		$smcFunc['db_free_result']($request);
	}
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs-Db-mysql.php">
		<operation>
			<search position="after"><![CDATA[
	if (!isset($matches[2]))]]></search>
			<add><![CDATA[
	if ($matches[1] === 'query_see_project')
		return $user_info['query_see_project'];
	elseif ($matches[1] === 'query_see_version')
		return $user_info['query_see_version'];
	elseif ($matches[1] === 'query_see_issue')
		return $user_info['query_see_issue'];
	elseif ($matches[1] === 'query_see_issue_project')
		return $user_info['query_see_issue_project'];
	elseif ($matches[1] === 'query_see_version_timeline')
		return $user_info['query_see_version_timeline'];
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs-Db-sqlite.php">
		<operation>
			<search position="after"><![CDATA[
	if (!isset($matches[2]))]]></search>
			<add><![CDATA[
	if ($matches[1] === 'query_see_project')
		return $user_info['query_see_project'];
	elseif ($matches[1] === 'query_see_version')
		return $user_info['query_see_version'];
	elseif ($matches[1] === 'query_see_issue')
		return $user_info['query_see_issue'];
	elseif ($matches[1] === 'query_see_issue_project')
		return $user_info['query_see_issue_project'];
	elseif ($matches[1] === 'query_see_version_timeline')
		return $user_info['query_see_version_timeline'];
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs-Db-postgresql.php">
		<operation>
			<search position="after"><![CDATA[
	if (!isset($matches[2]))]]></search>
			<add><![CDATA[
	if ($matches[1] === 'query_see_project')
		return $user_info['query_see_project'];
	elseif ($matches[1] === 'query_see_version')
		return $user_info['query_see_version'];
	elseif ($matches[1] === 'query_see_issue')
		return $user_info['query_see_issue'];
	elseif ($matches[1] === 'query_see_issue_project')
		return $user_info['query_see_issue_project'];
	elseif ($matches[1] === 'query_see_version_timeline')
		return $user_info['query_see_version_timeline'];
]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/Subs-Members.php">
		<operation>
			<search position="after"><![CDATA[	// Make their votes appear as guest votes - at least it keeps the totals right.]]></search>
			<add><![CDATA[	// Make Project Tools comments guest posts
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}issue_comments
		SET id_member = {int:guest_id}
		WHERE id_member IN ({array_int:users})',
		array(
			'guest_id' => 0,
			'blank_email' => '',
			'users' => $users,
		)
	);
	// Make Project Tools issues guest
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}issues
		SET id_reporter = {int:guest_id}
		WHERE id_reporter IN ({array_int:users})',
		array(
			'guest_id' => 0,
			'blank_email' => '',
			'users' => $users,
		)
	);	
	// Make Project Tools issues updated by guest
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}issues
		SET id_updater = {int:guest_id}
		WHERE id_updater IN ({array_int:users})',
		array(
			'guest_id' => 0,
			'blank_email' => '',
			'users' => $users,
		)
	);
	// Make Project Tools events guests
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}project_timeline
		SET id_member = {int:guest_id}
		WHERE id_member IN ({array_int:users})',
		array(
			'guest_id' => 0,
			'blank_email' => '',
			'users' => $users,
		)
	);
	// Delete the members notifications and read logs
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}log_notify_projects
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}log_projects
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);	
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}log_project_mark_read
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}log_issues
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);
	// Delete developer status
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}project_developer
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);
	// Delete possible settings
	$smcFunc['db_query']('', '
		DELETE FROM {db_prefix}project_settings
		WHERE id_member IN ({array_int:users})',
		array(
			'users' => $users,
		)
	);

]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Who.php">
		<operation>
			<search position="before"><![CDATA[		'mods' => array(]]></search>
			<add><![CDATA[
				'SMF Project Tools &copy; 2007-2010<br /><span class="smalltext">Uses <a href="http://www.famfamfam.com/lab/icons/silk/" rel="nofollow">FamFamFam Silk</a> icons licensed under Creative Commons Attribution 2.5 License</span>',]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[	$board_ids = array();]]></search>
			<add><![CDATA[
	
	// Project Tools
	$project_ids = array();
	$issue_ids = array();
]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[			// It's the board index!!  It must be!]]></search>
			<add><![CDATA[			// Project Tools
			elseif (isset($actions['issue']))
			{
				// Hide first, show later.
				$data[$k] = $txt['who_hidden'];
				$issue_ids[(int) $actions['issue']][$k] = $txt['who_project_issue'];
			}
			elseif (isset($actions['project']))
			{
				// Hide first, show later.
				$data[$k] = $txt['who_hidden'];
				$project_ids[(int) $actions['project']][$k] = $txt['who_project'];
			}
			elseif (isset($actions['action']) && $actions['action'] == 'projects')
			{
				if (allowedTo('project_access'))
					$data[$k] = sprintf($txt['who_project_index'], project_get_url());
				else
					$data[$k] = $txt['who_hidden'];
			}
]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[if (!isset($actions['action']) || $actions['action'] == 'display']]></search>
			<add><![CDATA[ || $actions['action'] == 'projects']]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
	// Load board names.]]></search>
			<add><![CDATA[	// Project Tools
	if (!empty($project_ids))
	{
		$request = $smcFunc['db_query']('', '
			SELECT p.id_project, p.name
			FROM {db_prefix}projects AS p
				LEFT JOIN {db_prefix}project_developer AS dev ON (dev.id_project = p.id_project
					AND dev.id_member = {int:current_member})
			WHERE {query_see_project}
				AND p.id_project IN({array_int:projects})
			ORDER BY p.name',
			array(
				'projects' => array_keys($project_ids),
				'current_member' => $user_info['id'],
			)
		);
		while ($row = $smcFunc['db_fetch_assoc']($request))
		{
			// Put the project name into the string for each member...
			foreach ($project_ids[$row['id_project']] as $k => $session_text)
				$data[$k] = sprintf($session_text, project_get_url(array('project' => $row['id_project'])), $row['name']);
		}
		$smcFunc['db_free_result']($request);
	}
	
	if (!empty($issue_ids))
	{
		$request = $smcFunc['db_query']('', '
			SELECT
				i.id_issue, i.id_project, i.subject
			FROM {db_prefix}issues AS i
				INNER JOIN {db_prefix}projects AS p ON (p.id_project = i.id_project)
				LEFT JOIN {db_prefix}project_developer AS dev ON (dev.id_project = p.id_project
					AND dev.id_member = {int:current_member})
			WHERE {query_see_project}
				AND {query_see_issue}
				AND id_issue IN ({array_int:issues})',
			array(
				'issues' => array_keys($issue_ids),
				'current_member' => $user_info['id'],
			)
		);
		while ($row = $smcFunc['db_fetch_assoc']($request))
		{
			// Put the project name into the string for each member...
			foreach ($issue_ids[$row['id_issue']] as $k => $session_text)
				$data[$k] = sprintf($session_text, project_get_url(array('issue' => $row['id_issue'] . '.0'), $row['id_project']), $row['subject']);
		}
		$smcFunc['db_free_result']($request);
	}
]]></add>
		</operation>		
	</file>

	<!-- Languages -->
	<file name="$languagedir/Modifications.english.php">
		<operation>
			<search position="end" />
			<add><![CDATA[// SMF Project tools start
$txt['project_tools'] = 'Project Tools';
$txt['issue_tracker'] = 'Issue Tracker';
$txt['issues'] = 'Issues';
$txt['project'] = 'Project';
$txt['projects'] = 'Projects';
$txt['core_settings_item_pj'] = 'Project Tools';
$txt['core_settings_item_pj_desc'] = 'Enables/Disables Project Tools addon';
$txt['patch_highlight'] = 'Viewing Highlight of Patch: %s';

// Profile
$txt['project_profile'] = 'Project Tools';
$txt['project_profile_main'] = 'Statistics';
$txt['project_profile_reported'] = 'Reported Issues';
$txt['project_profile_assigned'] = 'Assigned Issues';

// Project - Notifications
$txt['notifications_projects'] = 'Current Project Notifications';
$txt['notifications_projects_none'] = 'No projects added for notifications';

// SMF Project tools admin
$txt['project_general'] = 'General';
$txt['project_general_main'] = 'Information';
$txt['project_general_settings'] = 'Settings';
$txt['project_general_maintenance'] = 'Maintenance';
$txt['project_general_extensions'] = 'Extensions';

$txt['manage_projects'] = 'Projects';
$txt['modify_projects'] = 'Modify Projects';
$txt['new_project'] = 'New Project';

$txt['manage_project_permissions'] = 'Permissions';
$txt['project_permissions'] = 'Permissions';

// Permission Names
$txt['permissiongroup_project'] = 'Project Tools';
$txt['permissionname_project_access'] = 'Access Project Tools';
$txt['permissionname_project_profile'] = 'View Project Tools Profile';
$txt['permissionname_project_profile_own'] = 'Own';
$txt['permissionname_project_profile_any'] = 'Any';
$txt['permissionname_project_admin'] = 'Administrate Project Tools';

// Simple permission gropus
$txt['permissiongroup_simple_project'] = 'Use Project Tools';

// Simple permission names
$txt['permissionname_simple_project_profile_own'] = 'View their own Project Tools profile';
$txt['permissionname_simple_project_profile_any'] = 'View any Project Tools profile';

// Who's online
$txt['who_project_index'] = 'Viewing <a href="%1$s">project list</a>.';
$txt['who_project'] = 'Viewing the project <a href="%1$s">%2$s</a>.';
$txt['who_project_issue'] = 'Viewing the issue <a href="%1$s">%2$s</a>.';

// Errors
$txt['cannot_project_access'] = 'You are not allowed to access Project Tools.';
$txt['cannot_project_view'] = 'You are not allowed to view this project.';
$txt['cannot_project_report'] = 'You are not allowed to report issues of this project.';
$txt['cannot_project_admin'] = 'You are not allowed to administrate.';
$txt['cannot_project_issue_view'] = 'You are not allowed to view issues of this project.';
$txt['cannot_project_issue_report'] = 'You are not allowed to report issues of this project.';
$txt['cannot_project_edit_comment_own'] = 'You are not allowed to edit comments.';
// SMF Project tools end]]></add>
		</operation>
	</file>

</modification>